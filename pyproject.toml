[project]
name = "yamllint"
description = "A linter for YAML files."
readme = {file = "README.rst", content-type = "text/x-rst"}
requires-python = ">=3.9"
license = {text = "GPL-3.0-or-later"}
authors = [{name = "Adrien VergÃ©"}]
keywords = ["yaml", "lint", "linter", "syntax", "checker"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python",
    "Topic :: Software Development",
    "Topic :: Software Development :: Debuggers",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing",
]
dynamic = ["version"]
dependencies = [
    "pathspec >= 0.5.3",
    "pyyaml",
    # Required for python < 3.11
    "tomli ; python_version < '3.11'",
]

[project.optional-dependencies]
dev = [
    "doc8",
    "flake8",
    "flake8-import-order",
    "rstcheck[sphinx]",
    "sphinx",
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "pytest-mock",
    "pytest-sugar",
    "ruff",
    "uv",
]

win =  ["pywinpty", "colorama"]

[project.scripts]
yamllint = "yamllint.cli:run"

[project.urls]
homepage = "https://github.com/adrienverge/yamllint"
repository = "https://github.com/adrienverge/yamllint"
documentation = "https://yamllint.readthedocs.io"

[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools >= 61"]

[tool.setuptools]
packages = ["yamllint", "yamllint.conf", "yamllint.rules"]

[tool.setuptools.package-data]
yamllint = ["conf/*.yaml"]

[tool.setuptools.dynamic]
version = {attr = "yamllint.__version__"}

[tool.pytest.ini_options]
addopts = ["-ra", "-q"]
testpaths = ["tests"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.9
target-version = "py39"
output-format = "grouped"
[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["I", "S", "UP", "RUF", "E", "F", "W"]
ignore = [
    # S101 - use of assert
    "S101",
    # W293 - blank line contains whitespace
    "W293",
    # RUF100 - unused noqa
    "RUF100",
    # E501 - line too long
    "E501",
    # Prefer single quotes
    "Q000",
    # Avoid long exception messages
    "TRY003",
    # Exception assign variable first
    "EM101",
    # docstrings
    "D205",
    "D212",
    "D301",
    "D103",
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"test_module.py" = ["S603"]
"yamllint/rules/quoted_strings.py" = ["S105"]
"yamllint/rules/line_length.py" = ["UP031"]
"yamllint/rules/*.py" = ["D"]
"tests/*.py" = ["D"]
"docs/conf.py" = ["D"]
"setup.py" = ["D"]

[tool.ruff.format]
# Unlike Black, use single quotes for strings.
quote-style = "single"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

# temporarily exclude rules and tests directories until they are configured
exclude = ["pylint/rules", "pylint/tests",]